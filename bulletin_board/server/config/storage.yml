test:
  service: Disk
  root: <%= Rails.root.join("tmp/storage") %>

local:
  service: Disk
  root: <%= Rails.root.join("storage") %>

# Use rails credentials:edit to set the AWS secrets (as aws:access_key_id|secret_access_key)
s3:
  service: S3
  access_key_id: <%= ENV['AWS_ACCESS_KEY_ID'] %>
  secret_access_key: <%= ENV['AWS_SECRET_ACCESS_KEY'] %>
  bucket: <%= ENV['AWS_BUCKET_NAME'] %>
  <%= "region: #{ENV['AWS_REGION']}" if ENV['AWS_REGION'].present? %>
  <%= "endpoint: #{ENV['AWS_ENDPOINT']}" if ENV['AWS_ENDPOINT'].present? %>

azure:
  service: AzureStorage
  storage_account_name: <%= ENV['AZURE_STORAGE_ACCOUNT_NAME'] %>
  storage_access_key: <%= ENV['AZURE_STORAGE_ACCESS_KEY'] %>
  container: <%= ENV['AZURE_CONTAINER'] %>

gcs:
  service: GCS
  project: <%= ENV['GCS_PROJECT'] %>
  bucket: <%= ENV['GCS_BUCKET'] %>
  credentials:
    type: <%= ENV['GCS_TYPE'] %>
    project_id: <%= ENV['GCS_PROJECT_ID'] %>
    private_key_id: <%= ENV['GCS_PRIVATE_KEY_ID'] %>
    private_key: <%= ENV['GCS_PRIVATE_KEY'] %>
    client_email: <%= ENV['GCS_CLIENT_EMAIL'] %>
    client_id: <%= ENV['GCS_CLIENT_ID'] %>
    auth_uri: <%= ENV['GCS_AUTH_URI'] %>
    token_uri: <%= ENV['GCS_TOKEN_URI'] %>
    auth_provider_x509_cert_url: <%= ENV['GCS_AUTH_PROVIDER_X509_CERT_URL'] %>
    client_x509_cert_url: <%= ENV['GCS_CLIENT_X509_CERT_URL'] %>
# mirror:
#   service: Mirror
#   primary: local
#   mirrors: [ amazon, google, microsoft ]
