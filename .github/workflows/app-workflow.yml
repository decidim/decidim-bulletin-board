name: "[CI] Application"
on:
  pull_request:
    paths:
      - ".github/workflows/app-workflow.yml"
      - "decidim-bulletin_board-app/**"
  push:
    branches:
      - develop
      - main

env:
  CI: "true"
  SIMPLECOV: "true"
  RUBY_VERSION: 2.6.6
  ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
  NODE_VERSION: "15"

defaults:
  run:
    working-directory: ./decidim-bulletin_board-app

jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.0.0
        with:
          fetch-depth: 1
      - uses: ruby/setup-ruby@master
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Recover gems cache
        uses: actions/cache@v1
        with:
          path: ./decidim-bulletin_board-app/vendor/bundle
          key: ${{ runner.OS }}-decidim-bulletin_board-app-deps-${{ hashFiles('decidim-bulletin_board-app/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.OS }}-decidim-bulletin_board-app-deps-${{ env.cache-name }}-
            ${{ runner.OS }}-decidim-bulletin_board-app-deps-
            ${{ runner.OS }}-decidim-bulletin_board-app-
      - name: Install Ruby deps
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: cd decidim-bulletin_board-app && bundle install --path vendor/bundle --jobs 4 --retry 3
      - name: Recover packages cache
        uses: actions/cache@v1
        with:
          path: ./decidim-bulletin_board-app/node_modules
          key: ${{ runner.OS }}-decidim-bulletin_board-app-js-deps-${{ hashFiles('decidim-bulletin_board-app/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-decidim-bulletin_board-app-js-deps-${{ env.cache-name }}-
            ${{ runner.OS }}-decidim-bulletin_board-app-js-deps-
            ${{ runner.OS }}-decidim-bulletin_board-app-js-
      - name: Install Javascript deps
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: cd decidim-bulletin_board-app && npm ci
      - name: Install Rubocop
        run: gem install rubocop
      - run: bundle exec rubocop -P
        name: Lint Ruby files
      - run: npm run lint
        name: Lint JS files
      - run: npm run format
        name: Format JS files
  unit-tests:
    name: Unit tests
    needs: lint
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: postgres
    env:
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_HOST: localhost
    steps:
      - uses: actions/checkout@v2.0.0
        with:
          fetch-depth: 1
      - uses: ruby/setup-ruby@master
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8.2"
      - name: Install postgres client
        run: sudo apt-get install libpq-dev
      - name: Recover gems cache
        uses: actions/cache@v1
        with:
          path: ./decidim-bulletin_board-app/vendor/bundle
          key: ${{ runner.OS }}-decidim-bulletin_board-app-deps-${{ hashFiles('decidim-bulletin_board-app/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.OS }}-decidim-bulletin_board-app-deps-${{ env.cache-name }}-
            ${{ runner.OS }}-decidim-bulletin_board-app-deps-
            ${{ runner.OS }}-decidim-bulletin_board-app-
      - name: Install Ruby deps
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: cd decidim-bulletin_board-app && bundle install --path vendor/bundle --jobs 4 --retry 3
      - name: Recover packages cache
        uses: actions/cache@v1
        with:
          path: ./decidim-bulletin_board-app/node_modules
          key: ${{ runner.OS }}-decidim-bulletin_board-app-js-deps-${{ hashFiles('decidim-bulletin_board-app/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-decidim-bulletin_board-app-js-deps-${{ env.cache-name }}-
            ${{ runner.OS }}-decidim-bulletin_board-app-js-deps-
            ${{ runner.OS }}-decidim-bulletin_board-app-js-
      - name: Install Javascript deps
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: cd decidim-bulletin_board-app && npm ci
      - name: Install ElectionGuard wrappers
        run: ./install_eg_wrappers.sh
      - name: Create database
        env:
          RAILS_ENV: test
        run: |
          bundler exec rails db:create
          bundler exec rails db:migrate
      - name: Check if GraphQL schema has changed
        env:
          RAILS_ENV: test
        run: |
          bundle exec rails server &
          sleep 5
          bundle exec rake schema:generate
          npm run schema:generate
          git diff --exit-code
      - name: Run Rspec tests
        run: bundler exec rake
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          directory: ./decidim-bulletin_board-app/coverage
      - name: Run Jest tests
        run: npm run test
  e2e-test:
    name: E2E tests
    needs: unit-tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: postgres
    env:
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_HOST: localhost
    steps:
      - uses: actions/checkout@v2.0.0
        with:
          fetch-depth: 1
      - uses: ruby/setup-ruby@master
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8.2"
      - name: Install postgres client
        run: sudo apt-get install libpq-dev
      - name: Recover gems cache
        uses: actions/cache@v1
        with:
          path: ./decidim-bulletin_board-app/vendor/bundle
          key: ${{ runner.OS }}-decidim-bulletin_board-app-deps-${{ hashFiles('decidim-bulletin_board-app/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.OS }}-decidim-bulletin_board-app-deps-${{ env.cache-name }}-
            ${{ runner.OS }}-decidim-bulletin_board-app-deps-
            ${{ runner.OS }}-decidim-bulletin_board-app-
      - name: Install Ruby deps
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: cd decidim-bulletin_board-app && bundle install --path vendor/bundle --jobs 4 --retry 3
      - name: Recover packages cache
        uses: actions/cache@v1
        with:
          path: ./decidim-bulletin_board-app/node_modules
          key: ${{ runner.OS }}-decidim-bulletin_board-app-js-deps-${{ hashFiles('decidim-bulletin_board-app/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-decidim-bulletin_board-app-js-deps-${{ env.cache-name }}-
            ${{ runner.OS }}-decidim-bulletin_board-app-js-deps-
            ${{ runner.OS }}-decidim-bulletin_board-app-js-
      - name: Install Javascript deps
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: cd decidim-bulletin_board-app && npm ci
      - name: Install ElectionGuard wrappers
        run: ./install_eg_wrappers.sh
      - name: Create database
        env:
          RAILS_ENV: test
        run: |
          bundler exec rails db:create
          bundler exec rails db:migrate
      - name: Start Rails server
        env:
          RAILS_ENV: test
        run: |
          bundle exec rails server -e test -p 5017 &
          sleep 5
      - name: Install cypress
        run: npx cypress install
      - name: Run tests
        run: npm run e2e:tests
      - name: Upload artifacts (screenshots)
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress screenshots
          path: decidim-bulletin_board-app/cypress/screenshots/
      - name: Upload artifacts (videos)
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress videos
          path: decidim-bulletin_board-app/cypress/videos/
      - name: Upload artifacts (downloads)
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress downloads
          path: decidim-bulletin_board-app/cypress/downloads/
